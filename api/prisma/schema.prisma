generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Question {
  id        String   @id @default(uuid())
  question  String
  addedAt   DateTime @default(now())
  editedAt  DateTime @updatedAt
  meta      Json?
  surveys   SurveyQuestion[]
}

model Survey {
  id        String   @id @default(uuid())
  name      String
  description String?
  synopsis   String?
  active    Boolean  @default(true)
  addedAt   DateTime @default(now())
  editedAt  DateTime @updatedAt
  meta      Json?
  questions SurveyQuestion[]
}

// Join table to represent ordered list of questions in a survey
model SurveyQuestion {
  id        String   @id @default(uuid())
  survey    Survey   @relation(fields: [surveyId], references: [id])
  surveyId  String
  question  Question @relation(fields: [questionId], references: [id])
  questionId String
  order     Int

  @@unique([surveyId, questionId])
}

// Admin users for managing the application. We store identity provider
// identifiers (azureId) and optional local passwordHash/twoFactorSecret
// so the model can support SSO (Azure / Google / LinkedIn) or local auth
// in the future.
model AdminUser {
  id             String   @id @default(cuid())
  email          String   @unique
  azureId        String?  @unique
  passwordHash   String?
  twoFactorSecret String?
  isAdmin        Boolean  @default(true)
  active         Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
